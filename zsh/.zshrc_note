# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME="agnoster"

# Setting history length  and stuff related to it
export HISTFILESIZE=100000
export HISTSIZE=100000
export HISTFILE=~/.zsh_history
export HISTTIMEFORMAT="[%F %T] "
PROMPT_COMMAND="zsh_history -a; $PROMPT_COMMAND"
export HISTCONTROL=ignoredups

# Uncomment one of the following lines to change the auto-update behavior
# zstyle ':omz:update' mode disabled  # disable automatic updates
# zstyle ':omz:update' mode reminder  # just remind me to update when it's time
zstyle ':omz:update' mode auto        # update automatically without asking

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
HIST_STAMPS="dd.mm.yyyy"

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
zsh-autocomplete
zsh-autosuggestions
zsh-syntax-highlighting
)

source $ZSH/oh-my-zsh.sh

ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=#458588'

export LC_ALL="en_US.UTF-8"
export LANG="en_US.UTF-8"
export LANGUAGE="en_US.UTF-8"
export PATH=$HOME/.local/bin:$PATH
export PATH=$HOME/STMicroelectronics/STM32Cube/STM32CubeProgrammer/bin:$PATH
export BAT_THEME="gruvbox-dark"
export PATH=$PATH:/home/algernon/.spicetify

function myTree() {
    if [ -z "$1" ]; then
        tree -LChas 1
    else
        tree -LChas "$1"
    fi
}

function y() {
	local tmp="$(mktemp -t "yazi-cwd.XXXXXX")" cwd
	yazi "$@" --cwd-file="$tmp"
	if cwd="$(command cat -- "$tmp")" && [ -n "$cwd" ] && [ "$cwd" != "$PWD" ]; then
		builtin cd -- "$cwd"
	fi
	rm -f -- "$tmp"
}

function start_weather_watch () {
    # Function to handle termination signals
    trap 'break' INT TERM

    # Main loop to fetch weather data
    while true; do
        # Clear the screen
        clear

        # Fetch weather data and print it
        echo "$(curl -s 'wttr.in/Pouso-Alegre' | head -n 7)"

       # Sleep for a specified interval
        sleep 60
    done
}

# alias tock="tock -msc --width=4 --height=2 --color=6"
alias show='myTree'
alias remote-connect="ssh asimov@192.168.18.155"
alias stats-connect="ssh stats@192.168.18.155"
alias hist="history | grep"
alias my-ip="ip -c -h -s addr"
alias filter="ls -la | grep"
alias ls="ls --color=auto"
alias update="sudo dnf upgrade && flatpak update"
alias cd="z"
alias cat="bat"
alias tn="tmux new -s"
alias ta="tmux attach -t"
alias tl="tmux list-sessions"
alias tf="tmux new -s Fedora"
alias temp='start_weather_watch'
alias fetch-st="rsync -avh --progress --delete \
                asimov@192.168.18.155:/home/asimov/yocto/STM32MPU-Ecosystem-v6.0.1/Distribution-Package/build-openstlinuxweston-stm32mp13-disco/tmp-glibc/deploy/images/ \
                /home/algernon/Desktop/ST/images"
alias fetch-nxp="rsync -avh --progress --delete \
                asimov@192.168.18.155:/home/asimov/yocto/imx-6.6.52-2.2.0/build-imx8mn-rpm/tmp/deploy/images/ \
                /home/algernon/Desktop/NXP/images"
alias fetch-rasp="rsync -avh --progress --delete \
                asimov@192.168.18.155:/home/asimov/yocto/rpi-build-rpm/tmp-glibc/deploy/images/ \
                /home/algernon/Desktop/RASP/images"

eval "$(zoxide init zsh)"



echo -e "\n"
echo $(uptime)
for i in {7..0}; do echo -n -e "\e[3${i}m███████\e[0m"; done
echo -e "\n\n"
